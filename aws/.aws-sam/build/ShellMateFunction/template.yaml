AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: ShellMate - AI-powered natural language to shell command converter

# =============================================================================
# CENTRAL CONFIGURATION - All ShellMate settings in one place
# =============================================================================

Parameters:
  Stage:
    Type: String
    Default: dev
    Description: Deployment stage
    AllowedValues: [dev, prod]

# =============================================================================
# MAPPINGS - Central configuration
# =============================================================================

Mappings:
  ApiConfig:
    RateLimit:
      Requests: 50
      Burst: 100
      Daily: 5000
    Timeout:
      Lambda: 30
      Api: 30


# =============================================================================
# GLOBALS
# =============================================================================

Globals:
  Function:
    Timeout: !FindInMap [ApiConfig, Timeout, Lambda]
    MemorySize: 512
    Runtime: python3.9
    Environment:
      Variables:
        STAGE: !Ref Stage

# =============================================================================
# RESOURCES
# =============================================================================

Resources:
  # Lambda Function
  ShellMateFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "shellmate-${Stage}"
      CodeUri: ./
      Handler: lambda_function.lambda_handler
      Description: !Sub "ShellMate ${Stage} - Convert natural language to shell commands using AI"
      Environment:
        Variables:
          MODEL_ID: "anthropic.claude-3-haiku-20240307-v1:0"
      Policies:
        - Version: '2012-10-17'
          Statement:
            # Bedrock model access
            - Effect: Allow
              Action:
                - bedrock:InvokeModel
              Resource: 
                - !Sub "arn:aws:bedrock:${AWS::Region}::foundation-model/anthropic.claude-3-haiku-20240307-v1:0"
                - !Sub "arn:aws:bedrock:${AWS::Region}::foundation-model/anthropic.claude-3-5-sonnet-20241022-v2:0"
                - !Sub "arn:aws:bedrock:${AWS::Region}::foundation-model/anthropic.claude-3-5-sonnet-20240620-v1:0"
            # CloudWatch Logs
            - Effect: Allow
              Action:
                - logs:CreateLogGroup
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource: !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*"
      Events:
        ConvertApi:
          Type: Api
          Properties:
            Path: /convert
            Method: post
            RestApiId: !Ref ShellMateApi
            Auth:
              ApiKeyRequired: true
        OptionsApi:
          Type: Api
          Properties:
            Path: /convert
            Method: options
            RestApiId: !Ref ShellMateApi

  # API Gateway
  ShellMateApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Sub "shellmate-api-${Stage}"
      StageName: !Ref Stage
      Description: !Sub "ShellMate API for ${Stage} environment"
      Cors:
        AllowMethods: "'POST,GET,OPTIONS'"
        AllowHeaders: "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'"
        AllowOrigin: "'*'"
      Auth:
        ApiKeyRequired: true
        UsagePlan:
          CreateUsagePlan: PER_API
          Description: !Sub "ShellMate ${Stage} usage plan"
          Quota:
            Limit: !FindInMap [ApiConfig, RateLimit, Daily]
            Period: DAY
          Throttle:
            BurstLimit: !FindInMap [ApiConfig, RateLimit, Burst]
            RateLimit: !FindInMap [ApiConfig, RateLimit, Requests]
          UsagePlanName: !Sub "shellmate-${Stage}-usage-plan"
      DefinitionBody:
        openapi: 3.0.1
        info:
          title: !Sub "ShellMate API (${Stage})"
          description: Convert natural language to shell commands using AI
          version: 1.0.0
        paths:
          /convert:
            post:
              summary: Convert natural language to shell command
              description: "Powered by Claude 3 Haiku via AWS Bedrock"
              security:
                - ApiKeyAuth: []
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      type: object
                      required: [query]
                      properties:
                        query:
                          type: string
                          description: Natural language query
                          example: "list all python files older than 5 days"
                        context:
                          type: object
                          description: Optional context information
                          properties:
                            os:
                              type: string
                              description: Operating system
                            cwd:
                              type: string
                              description: Current working directory
              responses:
                '200':
                  description: Successful conversion
                  content:
                    application/json:
                      schema:
                        type: object
                        properties:
                          command:
                            type: string
                            description: Generated shell command
                            example: "find . -name '*.py' -mtime +5"
                          query:
                            type: string
                            description: Original query
                '400':
                  description: Bad request
                '403':
                  description: Forbidden - API key required
                '429':
                  description: Too many requests
                '500':
                  description: Internal server error
              x-amazon-apigateway-integration:
                uri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ShellMateFunction.Arn}/invocations"
                httpMethod: POST
                type: aws_proxy
            options:
              summary: CORS preflight
              responses:
                '200':
                  description: CORS headers
              x-amazon-apigateway-integration:
                uri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ShellMateFunction.Arn}/invocations"
                httpMethod: POST
                type: aws_proxy
        components:
          securitySchemes:
            ApiKeyAuth:
              type: apiKey
              in: header
              name: X-API-Key

# =============================================================================
# OUTPUTS - All important values for management scripts
# =============================================================================

Outputs:
  # API Information
  ApiEndpoint:
    Description: ShellMate API endpoint URL
    Value: !Sub "https://${ShellMateApi}.execute-api.${AWS::Region}.amazonaws.com/${Stage}/convert"
    Export:
      Name: !Sub "${AWS::StackName}-ApiEndpoint"

  ApiId:
    Description: API Gateway ID
    Value: !Ref ShellMateApi
    Export:
      Name: !Sub "${AWS::StackName}-ApiId"

  # Function Information
  FunctionName:
    Description: Lambda function name
    Value: !Ref ShellMateFunction
    Export:
      Name: !Sub "${AWS::StackName}-FunctionName"

  FunctionArn:
    Description: Lambda function ARN
    Value: !GetAtt ShellMateFunction.Arn
    Export:
      Name: !Sub "${AWS::StackName}-FunctionArn"

  # Model Information
  ModelId:
    Description: Bedrock model identifier being used
    Value: "anthropic.claude-3-haiku-20240307-v1:0"

  ModelDescription:
    Description: Model description
    Value: "Claude 3 Haiku (fast, cost-effective)"

  # Environment Information  
  Stage:
    Description: Deployment stage
    Value: !Ref Stage

  Region:
    Description: AWS Region
    Value: !Ref "AWS::Region"

  StackName:
    Description: CloudFormation stack name
    Value: !Ref "AWS::StackName"

  # Configuration Summary
  ConfigSummary:
    Description: Complete configuration summary
    Value: !Sub 
      - |
        Stage: ${Stage}
        Model: Claude 3 Haiku (fast, cost-effective)
        API Limits: ${RequestLimit}/sec, ${DailyLimit}/day
      - RequestLimit: !FindInMap [ApiConfig, RateLimit, Requests]
        DailyLimit: !FindInMap [ApiConfig, RateLimit, Daily]
